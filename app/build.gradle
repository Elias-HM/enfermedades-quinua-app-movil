plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.epiis.detectaquinua'
    compileSdk 35

    defaultConfig {
        applicationId "com.epiis.detectaquinua"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        debug {
            buildConfigField("String", "API_BASE_URL", "\"http://192.168.18.26:8000\"")
        }
        release {
            buildConfigField("String", "API_BASE_URL", "\"https://api-quinua.onrender.com\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("debug")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.retrofit // Retrofit para manejar APIs
    implementation libs.converter.gson // Para convertir JSON a objetos
    implementation libs.okhttp // Cliente HTTP

    implementation libs.room.runtime
    annotationProcessor libs.room.compiler
    implementation libs.room.ktx // Soporte para Kotlin coroutines (opcional, pero Ãºtil incluso en Java)

    implementation libs.ucrop // soporte para recorte de imagen

    implementation libs.lottie
}